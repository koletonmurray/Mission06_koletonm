// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mission06_koletonm.Models;

namespace Mission06_koletonm.Migrations
{
    [DbContext(typeof(Mission6Context))]
    partial class Mission6ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32");

            modelBuilder.Entity("Mission06_koletonm.Models.AddMovie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Edited")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LentTo")
                        .HasColumnType("TEXT");

                    b.Property<int>("MovieCategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT")
                        .HasMaxLength(25);

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<ushort>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("MovieId");

                    b.HasIndex("MovieCategoryId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            Director = "Anthony Russo",
                            Edited = false,
                            LentTo = "",
                            MovieCategoryId = 1,
                            Notes = "Best movie!",
                            Rating = "PG-13",
                            Title = "Avengers: Endgame",
                            Year = (ushort)2019
                        },
                        new
                        {
                            MovieId = 2,
                            Director = "Mark Dindal",
                            Edited = false,
                            LentTo = "",
                            MovieCategoryId = 2,
                            Notes = "A Classic!",
                            Rating = "G",
                            Title = "Emporer's New Groove",
                            Year = (ushort)2000
                        },
                        new
                        {
                            MovieId = 3,
                            Director = "Niki Caro",
                            Edited = false,
                            LentTo = "",
                            MovieCategoryId = 4,
                            Notes = "Tragic, but so moving",
                            Rating = "PG-13",
                            Title = "The Zookeeper's Wife",
                            Year = (ushort)2017
                        });
                });

            modelBuilder.Entity("Mission06_koletonm.Models.MovieCategory", b =>
                {
                    b.Property<int>("MovieCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("MovieCategoryName")
                        .HasColumnType("TEXT");

                    b.HasKey("MovieCategoryId");

                    b.ToTable("MovieCategories");

                    b.HasData(
                        new
                        {
                            MovieCategoryId = 1,
                            MovieCategoryName = "Action/Adventure"
                        },
                        new
                        {
                            MovieCategoryId = 2,
                            MovieCategoryName = "Comedy"
                        },
                        new
                        {
                            MovieCategoryId = 3,
                            MovieCategoryName = "Drama"
                        },
                        new
                        {
                            MovieCategoryId = 4,
                            MovieCategoryName = "Family"
                        },
                        new
                        {
                            MovieCategoryId = 5,
                            MovieCategoryName = "Horror"
                        },
                        new
                        {
                            MovieCategoryId = 6,
                            MovieCategoryName = "Musical"
                        },
                        new
                        {
                            MovieCategoryId = 7,
                            MovieCategoryName = "Mystery/Thriller"
                        },
                        new
                        {
                            MovieCategoryId = 8,
                            MovieCategoryName = "Romance"
                        },
                        new
                        {
                            MovieCategoryId = 9,
                            MovieCategoryName = "Science Fiction"
                        },
                        new
                        {
                            MovieCategoryId = 10,
                            MovieCategoryName = "Sports"
                        },
                        new
                        {
                            MovieCategoryId = 11,
                            MovieCategoryName = "War"
                        });
                });

            modelBuilder.Entity("Mission06_koletonm.Models.AddMovie", b =>
                {
                    b.HasOne("Mission06_koletonm.Models.MovieCategory", "MovieCategory")
                        .WithMany()
                        .HasForeignKey("MovieCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
